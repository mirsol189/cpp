// C++ 함수 특징 3. inline   .. 32page

       int add1(int a, int b) { return a + b; }
inline int add2(int a, int b) { return a + b; }

// 장점 ; 빠르다.
// 단점 : 여러번 치환되면 목적 코드(.obj, .exe)가 커질수 있다.

int main()
{
	int n1 = add1(1, 2);	// 1) 1, 2를 약속된 장소(레지스터)에 넣고
							// 2) call add1
		
	int n2 = add2(1, 2);	// 1) mov eax, 1
							// 2) add eax, 2   즉 더하는 기계어코드
}

// 핵심 
// 1. 컴파일러는 디폴트로 인라인 치환을 적용하지 않습니다.
//    "최적화 옵션" 이나 "인라인 치환 적용" 옵션을 전달해야 치환됩니다.

// VC  : 최적화 옵션 "/O2", 인라인 함수만 적용 : "/Ob1"
// g++ : 최적화 옵션 "-O2", 인라인 함수만 치환 옵션 부족
//						-always-inline

// 2. 크기가 작은 함수(1~2줄) 은  인라인 치환하면 
//    목적 코드 줄어들수도 있음.
//    단, 크기가 큰 함수는 목적 코드 커짐. 
//    너무 크면 "컴파일러가 인라인 치환 안함"