struct Point 
{
	int x;
	int y;
};

// 왜 리턴용 임시객체를 만드나요 ?
Point f1()
{
	Point pt;

	return pt;  // 이때를 생각해 보세요
				// pt는 지역변수 입니다. 함수 호출이 종료되면 파괴되어야 합니다
				// 1. pt를 이용해서 리턴용 임시객체를 만들어 놓고, 
				// 2. pt는 파괴
				// 3. 임시객체를 반환
				// 하는 원리 입니다.
}
// 주의 사항.. 절대로 지역변수는 참조 리턴하면 안됩니다.
Point& f2()
{
	Point pt;
	return pt; // 버그.. 컴파일 error 는 아니지만 절대 사용하면 안됩니다.
}				
// 함수 호출이 종료되어도 파괴 되지 않은 경우만 참조반환해야 합니다.
// 1. 전역 객체 이거나
// 2. return *this        c.increment()의 경우 호출이 종료되어도 c는 파괴 안됨.
// 3. 그외, 파괴되지 않는다면 참조 반환 가능.

int main()
{
	f1();
}